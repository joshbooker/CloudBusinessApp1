//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sales_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sales_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sales_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sales_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sales_Inserting(global::LightSwitchApplication.Sale entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sales_Inserted(global::LightSwitchApplication.Sale entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sales_Updating(global::LightSwitchApplication.Sale entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sales_Updated(global::LightSwitchApplication.Sale entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sales_Deleting(global::LightSwitchApplication.Sale entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sales_Deleted(global::LightSwitchApplication.Sale entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sales_Validate(global::LightSwitchApplication.Sale entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Sales_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sale, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Inserting(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Inserted(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Updating(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Updated(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Deleting(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Deleted(global::LightSwitchApplication.User entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Validate(global::LightSwitchApplication.User entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permissions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permissions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permissions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permissions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permissions_Inserting(global::LightSwitchApplication.Permission entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permissions_Inserted(global::LightSwitchApplication.Permission entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permissions_Updating(global::LightSwitchApplication.Permission entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permissions_Updated(global::LightSwitchApplication.Permission entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permissions_Deleting(global::LightSwitchApplication.Permission entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permissions_Deleted(global::LightSwitchApplication.Permission entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permissions_Validate(global::LightSwitchApplication.Permission entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Permissions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Permission, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPermissions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPermissions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPermissions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPermissions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPermissions_Inserting(global::LightSwitchApplication.UserPermission entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPermissions_Inserted(global::LightSwitchApplication.UserPermission entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPermissions_Updating(global::LightSwitchApplication.UserPermission entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPermissions_Updated(global::LightSwitchApplication.UserPermission entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPermissions_Deleting(global::LightSwitchApplication.UserPermission entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPermissions_Deleted(global::LightSwitchApplication.UserPermission entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPermissions_Validate(global::LightSwitchApplication.UserPermission entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPermissions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UserPermission, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyPermissions_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyPermissions_Executing(string PermissionName);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyPermissions_PreprocessQuery(string PermissionName, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserPermission> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyPermissions_Executed(string PermissionName, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPermission> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyPermissions_ExecuteFailed(string PermissionName, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApplicationData_InitializingConnection(global::Microsoft.LightSwitch.DatabaseConnectionState state);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Sale>
                __SalesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Sale>(
                    "Sales",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sales_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sales_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sales_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sales_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sales_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sales_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sales_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sales_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sales_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sales_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sales_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Sales_Filter);
            private static bool __Sales_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sales_CanInsert(ref result);
                return result;
            }
            private static bool __Sales_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sales_CanUpdate(ref result);
                return result;
            }
            private static bool __Sales_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sales_CanDelete(ref result);
                return result;
            }
            private static bool __Sales_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Sales_CanRead(ref result);
                return result;
            }
            private static void __Sales_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sale e)
            {
                d.Sales_Inserting(e);
            }
            private static void __Sales_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sale e)
            {
                d.Sales_Inserted(e);
            }
            private static void __Sales_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sale e)
            {
                d.Sales_Updating(e);
            }
            private static void __Sales_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sale e)
            {
                d.Sales_Updated(e);
            }
            private static void __Sales_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sale e)
            {
                d.Sales_Deleting(e);
            }
            private static void __Sales_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sale e)
            {
                d.Sales_Deleted(e);
            }
            private static void __Sales_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Sale e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Sales_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sale, bool>> __Sales_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Sale, bool>> filter = null;
                d.Sales_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>
                __UsersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.User>(
                    "Users",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Users_Filter);
            private static bool __Users_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanInsert(ref result);
                return result;
            }
            private static bool __Users_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanUpdate(ref result);
                return result;
            }
            private static bool __Users_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanDelete(ref result);
                return result;
            }
            private static bool __Users_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Users_CanRead(ref result);
                return result;
            }
            private static void __Users_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Inserting(e);
            }
            private static void __Users_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Inserted(e);
            }
            private static void __Users_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Updating(e);
            }
            private static void __Users_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Updated(e);
            }
            private static void __Users_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Deleting(e);
            }
            private static void __Users_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e)
            {
                d.Users_Deleted(e);
            }
            private static void __Users_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.User e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Users_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> __Users_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.User, bool>> filter = null;
                d.Users_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Permission>
                __PermissionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Permission>(
                    "Permissions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Permissions_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Permissions_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Permissions_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Permissions_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Permissions_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Permissions_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Permissions_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Permissions_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Permissions_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Permissions_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Permissions_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Permissions_Filter);
            private static bool __Permissions_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Permissions_CanInsert(ref result);
                return result;
            }
            private static bool __Permissions_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Permissions_CanUpdate(ref result);
                return result;
            }
            private static bool __Permissions_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Permissions_CanDelete(ref result);
                return result;
            }
            private static bool __Permissions_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Permissions_CanRead(ref result);
                return result;
            }
            private static void __Permissions_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Permission e)
            {
                d.Permissions_Inserting(e);
            }
            private static void __Permissions_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Permission e)
            {
                d.Permissions_Inserted(e);
            }
            private static void __Permissions_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Permission e)
            {
                d.Permissions_Updating(e);
            }
            private static void __Permissions_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Permission e)
            {
                d.Permissions_Updated(e);
            }
            private static void __Permissions_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Permission e)
            {
                d.Permissions_Deleting(e);
            }
            private static void __Permissions_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Permission e)
            {
                d.Permissions_Deleted(e);
            }
            private static void __Permissions_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Permission e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Permissions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Permission, bool>> __Permissions_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Permission, bool>> filter = null;
                d.Permissions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.UserPermission>
                __UserPermissionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.UserPermission>(
                    "UserPermissions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPermissions_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPermissions_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPermissions_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPermissions_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPermissions_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPermissions_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPermissions_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPermissions_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPermissions_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPermissions_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPermissions_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__UserPermissions_Filter);
            private static bool __UserPermissions_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.UserPermissions_CanInsert(ref result);
                return result;
            }
            private static bool __UserPermissions_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.UserPermissions_CanUpdate(ref result);
                return result;
            }
            private static bool __UserPermissions_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.UserPermissions_CanDelete(ref result);
                return result;
            }
            private static bool __UserPermissions_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.UserPermissions_CanRead(ref result);
                return result;
            }
            private static void __UserPermissions_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UserPermission e)
            {
                d.UserPermissions_Inserting(e);
            }
            private static void __UserPermissions_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UserPermission e)
            {
                d.UserPermissions_Inserted(e);
            }
            private static void __UserPermissions_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UserPermission e)
            {
                d.UserPermissions_Updating(e);
            }
            private static void __UserPermissions_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UserPermission e)
            {
                d.UserPermissions_Updated(e);
            }
            private static void __UserPermissions_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UserPermission e)
            {
                d.UserPermissions_Deleting(e);
            }
            private static void __UserPermissions_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UserPermission e)
            {
                d.UserPermissions_Deleted(e);
            }
            private static void __UserPermissions_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.UserPermission e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserPermissions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UserPermission, bool>> __UserPermissions_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.UserPermission, bool>> filter = null;
                d.UserPermissions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.UserPermission>
                __MyPermissionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.UserPermission>(
                    "MyPermissions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyPermissions_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyPermissions_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyPermissions_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyPermissions_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyPermissions_PreprocessQuery);
            private static bool __MyPermissions_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyPermissions_CanExecute(ref r);
                return r;
            }
            private static void __MyPermissions_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyPermissions_Executing((string)args[0]);
            }
            private static void __MyPermissions_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyPermissions_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPermission>)args[1]);
            }
            private static void __MyPermissions_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyPermissions_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __MyPermissions_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserPermission> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserPermission>)args[1];
                d.MyPermissions_PreprocessQuery((string)args[0], ref query);
                return query;
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.ApplicationDataService>
                ___DatabaseAuthEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ApplicationData_InitializingConnection);
            private static void __ApplicationData_InitializingConnection(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.DatabaseConnectionState state)
            {
                d.ApplicationData_InitializingConnection(state);
            }
        }
    
        #endregion
    }
    
    #endregion
}
